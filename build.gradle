buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'org.ajoberstar:semver-vcs-gradle-grgit:0.1.0'
    }
}

apply plugin: 'org.ajoberstar.semver-vcs-grgit'

ext.defaultVersions = [
    'org.junit': '5.0.0-SNAPSHOT',
    'org.clojure:clojure': '1.9.0-alpha5',
    'org.clojure:tools.namespace': '0.2.11'
]

allprojects {
    group = 'org.ajoberstar.jupiter'

    pluginManager.withPlugin('java') {
        repositories {
            jcenter()
            maven {
                name = 'sonatype-snapshots'
                url = 'https://oss.sonatype.org/content/repositories/snapshots'
            }
        }
    }

    pluginManager.withPlugin('maven-publish') {
        publishing {
            repositories {
                mavenLocal()
            }
        }
    }

    pluginManager.withPlugin('com.jfrog.bintray') {
        bintray {
            user = System.env['BINTRAY_USER']
            key = System.env['BINTRAY_KEY']
            publications = ['main']
            publish = true
            pkg {
                repo = 'maven'
                name = 'jupiter'
                licenses = ['EPL-1.0']
                websiteUrl = 'https://github.com/ajoberstar/jupiter'
                issueTrackerUrl = 'https://github.com/ajoberstar/jupiter/issues'
                vcsUrl = 'https://github.com/ajoberstar/jupiter.git'
                labels = ['junit', 'junit5', 'clojure', 'testing', 'gradle']
                publicDownloadNumbers = true
                githubRepo = 'ajoberstar/jupiter'

                version {
                    name = project.version
                    vcsTag = project.version
                }
            }
        }
    }

    configurations.all {
        resolutionStrategy.eachDependency { details ->
            if (details.requested.version == 'default') {
                def version = defaultVersions["${details.requested.group}:${details.requested.name}"] ?: defaultVersions[details.requested.group]
                details.useVersion version
            }
        }
    }
}
